╔═══════════════════════════════════════════════════════════════════════════╗
║                 TONSURANCE LOCAL DEVELOPMENT ARCHITECTURE                 ║
╚═══════════════════════════════════════════════════════════════════════════╝

┌─────────────────────────────────────────────────────────────────────────┐
│                           Developer Workflow                             │
│                                                                          │
│  Terminal 1          Terminal 2              Terminal 3                  │
│  ───────────         ───────────             ───────────                 │
│  Infrastructure      Backend Services        Frontend                    │
│  ./start-           ./start-                 ./start-                    │
│  infrastructure.sh   backend.sh              frontend.sh                 │
│                                                                          │
│  ✓ PostgreSQL        ✓ API Server (8080)     ✓ Vite Dev Server          │
│  ✓ Redis             ✓ WebSocket (/ws)       ✓ React HMR                │
│  ✓ Migrations        ✓ Oracle Keeper         ✓ TypeScript               │
└─────────────────────────────────────────────────────────────────────────┘

                                    │
                                    ▼

┌─────────────────────────────────────────────────────────────────────────┐
│                            Service Layer                                 │
├─────────────────────────────────────────────────────────────────────────┤
│                                                                          │
│  ┌──────────────┐    ┌──────────────┐    ┌──────────────┐             │
│  │   Frontend   │    │   API + WS   │    │    Oracle    │             │
│  │   React      │───▶│   OCaml      │───▶│    Keeper    │             │
│  │   Port 5173  │    │   Port 8080  │    │  Background  │             │
│  │              │    │              │    │              │             │
│  │ • Wallet     │    │ • REST API   │    │ • Price      │             │
│  │ • Staking    │    │ • WebSocket  │    │   Updates    │             │
│  │ • Analytics  │    │ • Health     │    │ • 60s Int.   │             │
│  └──────────────┘    └──────┬───────┘    └──────────────┘             │
│                              │                                          │
└──────────────────────────────┼──────────────────────────────────────────┘
                               │
                               ▼
┌─────────────────────────────────────────────────────────────────────────┐
│                          Data Layer                                      │
├─────────────────────────────────────────────────────────────────────────┤
│                                                                          │
│  ┌─────────────────────────┐    ┌─────────────────────────┐            │
│  │    PostgreSQL           │    │       Redis             │            │
│  │    TimescaleDB          │    │       Cache             │            │
│  │    Port 5432            │    │       Port 6379         │            │
│  │                         │    │                         │            │
│  │ • Policies              │    │ • Premium Quotes        │            │
│  │ • Risk Metrics          │    │ • WebSocket Sessions    │            │
│  │ • Bridge Health         │    │ • Rate Limiting         │            │
│  │ • Market Data           │    │                         │            │
│  │ • Time-series           │    │                         │            │
│  │                         │    │                         │            │
│  │ Docker Container        │    │ Docker Container        │            │
│  │ tonsurance-db           │    │ tonsurance-redis        │            │
│  └─────────────────────────┘    └─────────────────────────┘            │
│                                                                          │
└─────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────┐
│                          API Endpoints                                   │
├─────────────────────────────────────────────────────────────────────────┤
│                                                                          │
│  REST API (http://localhost:8080)                                       │
│  ─────────────────────────────────────────                              │
│  GET  /health                                                            │
│  POST /api/v2/quote/multi-dimensional                                   │
│  GET  /api/v2/risk/exposure                                             │
│  GET  /api/v2/bridge-health/:bridge_id                                  │
│  GET  /api/v2/risk/alerts                                               │
│  GET  /api/v2/tranches/apy                                              │
│                                                                          │
│  WebSocket (ws://localhost:8080/ws)                                     │
│  ────────────────────────────────────                                   │
│  Channel: bridge_health    - Bridge security updates                    │
│  Channel: risk_alerts      - Critical risk alerts                       │
│  Channel: top_products     - Top 10 product rankings                    │
│  Channel: tranche_apy      - APY updates (60s)                          │
│                                                                          │
└─────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────┐
│                          Management Scripts                              │
├─────────────────────────────────────────────────────────────────────────┤
│                                                                          │
│  Start:                      Stop:                                       │
│  ─────                       ─────                                       │
│  start-infrastructure.sh     stop-infrastructure.sh                      │
│  start-backend.sh            stop-backend.sh                             │
│  start-frontend.sh           [Ctrl+C in terminal]                        │
│                                                                          │
│  Monitoring:                 Utilities:                                  │
│  ──────────                  ─────────                                   │
│  logs.sh api                 PM2 (production alternative)                │
│  logs.sh keeper              ecosystem.config.js                         │
│  logs.sh db                  backend/config/local.json                   │
│  logs.sh redis               frontend/.env                               │
│                                                                          │
└─────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────┐
│                          File Locations                                  │
├─────────────────────────────────────────────────────────────────────────┤
│                                                                          │
│  Scripts:     /scripts/dev/*.sh                                          │
│  Logs:        /logs/*.log                                                │
│  Config:      /backend/config/local.json                                 │
│  Frontend:    /frontend/.env                                             │
│  Backend:     /backend/                                                  │
│  Docs:        /QUICKSTART.md, /DEVOPS_INFRASTRUCTURE_REPORT.md          │
│  PM2:         /ecosystem.config.js                                       │
│                                                                          │
└─────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────┐
│                          Quick Commands                                  │
├─────────────────────────────────────────────────────────────────────────┤
│                                                                          │
│  # Test health                                                           │
│  curl http://localhost:8080/health                                       │
│                                                                          │
│  # Get premium quote                                                     │
│  curl -X POST http://localhost:8080/api/v2/quote/multi-dimensional \    │
│    -H "Content-Type: application/json" \                                │
│    -d '{"coverage_type":"depeg","chain":"ethereum",...}'                │
│                                                                          │
│  # Connect to WebSocket                                                  │
│  wscat -c ws://localhost:8080/ws                                         │
│  > {"action":"subscribe","channel":"tranche_apy"}                        │
│                                                                          │
│  # View logs                                                             │
│  tail -f logs/api.log                                                    │
│  ./scripts/dev/logs.sh api                                               │
│                                                                          │
│  # Database connection                                                   │
│  PGPASSWORD=postgres psql -h localhost -U postgres -d tonsurance         │
│                                                                          │
│  # Redis connection                                                      │
│  docker exec -it tonsurance-redis redis-cli                              │
│                                                                          │
└─────────────────────────────────────────────────────────────────────────┘

╔═══════════════════════════════════════════════════════════════════════════╗
║  Total Startup Time: ~33 seconds (cold) | ~13 seconds (warm)             ║
║  Resource Usage:     ~510MB RAM | ~37% CPU (idle)                        ║
║  Services:           5 (PostgreSQL, Redis, API, Oracle, Frontend)        ║
╚═══════════════════════════════════════════════════════════════════════════╝
