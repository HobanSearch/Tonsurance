{
  "permissions": {
    "allow": [
      "Bash(npx jest:*)",
      "Bash(npm test:*)",
      "Bash(npx blueprint build:*)",
      "Bash(node:*)",
      "Bash(npx create-next-app:*)",
      "Bash(dune build:*)",
      "Bash(timeout 30 dune build pool/utilization_tracker.ml)",
      "Bash(echo:*)",
      "Bash(npx ts-node:*)",
      "Bash(opam list:*)",
      "Bash(func:*)",
      "Bash(psql:*)",
      "Bash(/usr/local/bin/psql:*)",
      "Bash(/opt/homebrew/bin/psql --version)",
      "Bash(npx blueprint test:*)",
      "Bash(opam install:*)",
      "Bash(yarn test:*)",
      "Bash(brew services start:*)",
      "Bash(export PKG_CONFIG_PATH=\"/opt/homebrew/opt/postgresql@16/lib/pkgconfig:$PKG_CONFIG_PATH\")",
      "Read(//opt/homebrew/Cellar/postgresql@16/16.10/lib/pkgconfig/**)",
      "Read(//opt/homebrew/Cellar/postgresql@16/16.10/bin/**)",
      "Bash(npx tsc:*)",
      "Bash(npm run build:*)",
      "Bash(chmod:*)",
      "Bash(./scripts/dev/verify-contracts.sh:*)",
      "Bash(for:*)",
      "Bash(do echo \"=== $f ===\")",
      "Bash(grep:*)",
      "Bash(done)",
      "Bash(ocamlc:*)",
      "Bash(ocaml:*)",
      "Bash(npm install:*)",
      "Bash(find:*)",
      "Bash(ocamlfind query:*)",
      "Bash(/Users/ben/Documents/Work/HS/Application/Tonsurance/wrappers/ParametricEscrow.ts )",
      "Bash(/Users/ben/Documents/Work/HS/Application/Tonsurance/wrappers/ParametricEscrow.compile.ts )",
      "Bash(/Users/ben/Documents/Work/HS/Application/Tonsurance/tests/ParametricEscrow.spec.ts )",
      "Bash(/Users/ben/Documents/Work/HS/Application/Tonsurance/scripts/deployParametricEscrow.ts )",
      "Bash(/Users/ben/Documents/Work/HS/Application/Tonsurance/scripts/testParametricEscrow.ts)",
      "Bash(timeout 60 dune build integration/binance_futures_client.ml)",
      "Bash(timeout 120 dune build integration/ton_client.ml)",
      "Bash(dune clean:*)",
      "Bash(cat:*)",
      "Bash(/Users/ben/Documents/Work/HS/Application/Tonsurance/scripts/dev/detect-secrets.sh:*)",
      "Bash(ls:*)",
      "Bash(timeout 120 dune build tonny/tonny_bot.exe)",
      "Bash(python3:*)",
      "Bash(do sed -i '' 's/\\[@@deriving sexp, yojson\\]/[@@deriving sexp]/g' \"$f\")",
      "Bash(do sed -i '' 's/Digest\\.string/Md5.digest_string/g' \"$f\")",
      "Bash(gtimeout:*)",
      "Bash(timeout 600 dune build)",
      "Read(//private/tmp/**)"
    ],
    "deny": [],
    "ask": []
  }
}